{"ast":null,"code":"/* eslint-disable no-underscore-dangle, no-param-reassign */\nimport { isJsonRpcResponsePayload } from '../util/type-guards';\nimport { getPayloadId } from '../util/get-payload-id';\nvar payloadPreprocessedSymbol = Symbol('Payload pre-processed by Magic SDK');\n/**\n * To avoid \"pre-processing\" a payload more than once (and needlessly\n * incrementing our payload ID generator), we attach a symbol to detect a\n * payloads we've already visited.\n */\n\nfunction markPayloadAsPreprocessed(payload) {\n  Object.defineProperty(payload, payloadPreprocessedSymbol, {\n    value: true,\n    enumerable: false\n  });\n  return payload;\n}\n/**\n * Returns `true` if the payload has been visited by our \"pre-processing,\" in\n * `standardizeJsonRpcRequestPayload(...)`.\n */\n\n\nfunction isPayloadPreprocessed(payload) {\n  return !!payload[payloadPreprocessedSymbol];\n}\n/**\n * Returns a full `JsonRpcRequestPayload` from a potentially incomplete payload\n * object. This method mutates the given `payload` to preserve compatibility\n * with external libraries that perform their own `JsonRpcRequestPayload.id`\n * check to associate responses (such as `web3`).\n *\n * This function is no-op if the payload has already been processed before.\n */\n\n\nexport function standardizeJsonRpcRequestPayload(payload) {\n  var _a, _b, _c;\n\n  if (!isPayloadPreprocessed(payload)) {\n    payload.jsonrpc = (_a = payload.jsonrpc) !== null && _a !== void 0 ? _a : '2.0';\n    payload.id = getPayloadId();\n    payload.method = (_b = payload.method) !== null && _b !== void 0 ? _b : 'noop';\n    payload.params = (_c = payload.params) !== null && _c !== void 0 ? _c : [];\n    markPayloadAsPreprocessed(payload);\n  }\n\n  return payload;\n}\n/**\n * Build a valid JSON RPC payload for emitting to the Magic SDK iframe relayer.\n */\n\nexport function createJsonRpcRequestPayload(method, params) {\n  if (params === void 0) {\n    params = [];\n  }\n\n  return markPayloadAsPreprocessed({\n    params: params,\n    method: method,\n    jsonrpc: '2.0',\n    id: getPayloadId()\n  });\n}\n/**\n * Formats and standardizes a JSON RPC 2.0 response from a number of potential\n * sources.\n */\n\nvar JsonRpcResponse =\n/** @class */\nfunction () {\n  function JsonRpcResponse(responseOrPayload) {\n    if (responseOrPayload instanceof JsonRpcResponse) {\n      this._jsonrpc = responseOrPayload.payload.jsonrpc;\n      this._id = responseOrPayload.payload.id;\n      this._result = responseOrPayload.payload.result;\n      this._error = responseOrPayload.payload.error;\n    } else if (isJsonRpcResponsePayload(responseOrPayload)) {\n      this._jsonrpc = responseOrPayload.jsonrpc;\n      this._id = responseOrPayload.id;\n      this._result = responseOrPayload.result;\n      this._error = responseOrPayload.error;\n    } else {\n      this._jsonrpc = responseOrPayload.jsonrpc;\n      this._id = responseOrPayload.id;\n      this._result = undefined;\n      this._error = undefined;\n    }\n  }\n\n  JsonRpcResponse.prototype.applyError = function (error) {\n    this._error = error;\n    return this;\n  };\n\n  JsonRpcResponse.prototype.applyResult = function (result) {\n    this._result = result;\n    return this;\n  };\n\n  Object.defineProperty(JsonRpcResponse.prototype, \"hasError\", {\n    get: function () {\n      return typeof this._error !== 'undefined' && this._error !== null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(JsonRpcResponse.prototype, \"hasResult\", {\n    get: function () {\n      return typeof this._result !== 'undefined';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(JsonRpcResponse.prototype, \"payload\", {\n    get: function () {\n      return {\n        jsonrpc: this._jsonrpc,\n        id: this._id,\n        result: this._result,\n        error: this._error\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return JsonRpcResponse;\n}();\n\nexport { JsonRpcResponse };","map":{"version":3,"sources":["../../../src/core/json-rpc.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/* eslint-disable no-underscore-dangle, no-param-reassign */\nimport { isJsonRpcResponsePayload } from '../util/type-guards';\nimport { getPayloadId } from '../util/get-payload-id';\nvar payloadPreprocessedSymbol = Symbol('Payload pre-processed by Magic SDK');\n/**\n * To avoid \"pre-processing\" a payload more than once (and needlessly\n * incrementing our payload ID generator), we attach a symbol to detect a\n * payloads we've already visited.\n */\nfunction markPayloadAsPreprocessed(payload) {\n    Object.defineProperty(payload, payloadPreprocessedSymbol, {\n        value: true,\n        enumerable: false,\n    });\n    return payload;\n}\n/**\n * Returns `true` if the payload has been visited by our \"pre-processing,\" in\n * `standardizeJsonRpcRequestPayload(...)`.\n */\nfunction isPayloadPreprocessed(payload) {\n    return !!payload[payloadPreprocessedSymbol];\n}\n/**\n * Returns a full `JsonRpcRequestPayload` from a potentially incomplete payload\n * object. This method mutates the given `payload` to preserve compatibility\n * with external libraries that perform their own `JsonRpcRequestPayload.id`\n * check to associate responses (such as `web3`).\n *\n * This function is no-op if the payload has already been processed before.\n */\nexport function standardizeJsonRpcRequestPayload(payload) {\n    var _a, _b, _c;\n    if (!isPayloadPreprocessed(payload)) {\n        payload.jsonrpc = (_a = payload.jsonrpc) !== null && _a !== void 0 ? _a : '2.0';\n        payload.id = getPayloadId();\n        payload.method = (_b = payload.method) !== null && _b !== void 0 ? _b : 'noop';\n        payload.params = (_c = payload.params) !== null && _c !== void 0 ? _c : [];\n        markPayloadAsPreprocessed(payload);\n    }\n    return payload;\n}\n/**\n * Build a valid JSON RPC payload for emitting to the Magic SDK iframe relayer.\n */\nexport function createJsonRpcRequestPayload(method, params) {\n    if (params === void 0) { params = []; }\n    return markPayloadAsPreprocessed({\n        params: params,\n        method: method,\n        jsonrpc: '2.0',\n        id: getPayloadId(),\n    });\n}\n/**\n * Formats and standardizes a JSON RPC 2.0 response from a number of potential\n * sources.\n */\nvar JsonRpcResponse = /** @class */ (function () {\n    function JsonRpcResponse(responseOrPayload) {\n        if (responseOrPayload instanceof JsonRpcResponse) {\n            this._jsonrpc = responseOrPayload.payload.jsonrpc;\n            this._id = responseOrPayload.payload.id;\n            this._result = responseOrPayload.payload.result;\n            this._error = responseOrPayload.payload.error;\n        }\n        else if (isJsonRpcResponsePayload(responseOrPayload)) {\n            this._jsonrpc = responseOrPayload.jsonrpc;\n            this._id = responseOrPayload.id;\n            this._result = responseOrPayload.result;\n            this._error = responseOrPayload.error;\n        }\n        else {\n            this._jsonrpc = responseOrPayload.jsonrpc;\n            this._id = responseOrPayload.id;\n            this._result = undefined;\n            this._error = undefined;\n        }\n    }\n    JsonRpcResponse.prototype.applyError = function (error) {\n        this._error = error;\n        return this;\n    };\n    JsonRpcResponse.prototype.applyResult = function (result) {\n        this._result = result;\n        return this;\n    };\n    Object.defineProperty(JsonRpcResponse.prototype, \"hasError\", {\n        get: function () {\n            return typeof this._error !== 'undefined' && this._error !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JsonRpcResponse.prototype, \"hasResult\", {\n        get: function () {\n            return typeof this._result !== 'undefined';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JsonRpcResponse.prototype, \"payload\", {\n        get: function () {\n            return {\n                jsonrpc: this._jsonrpc,\n                id: this._id,\n                result: this._result,\n                error: this._error,\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return JsonRpcResponse;\n}());\nexport { JsonRpcResponse };\n//# sourceMappingURL=json-rpc.js.map"]},"metadata":{},"sourceType":"module"}