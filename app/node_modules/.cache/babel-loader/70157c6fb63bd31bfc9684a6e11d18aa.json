{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport EventEmitter from 'eventemitter3';\n/**\n * An extension of `EventEmitter` (provided by `eventemitter3`) with an adjusted\n * type interface that supports the unique structure of Magic SDK modules.\n */\n\nvar TypedEmitter =\n/** @class */\nfunction (_super) {\n  __extends(TypedEmitter, _super);\n\n  function TypedEmitter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return TypedEmitter;\n}(EventEmitter);\n\nexport { TypedEmitter };\n/**\n * Creates a `TypedEmitter` instance and returns helper functions for easily\n * mixing `TypedEmitter` methods into other objects.\n */\n\nexport function createTypedEmitter() {\n  var emitter = new TypedEmitter();\n\n  var createChainingEmitterMethod = function (method, source) {\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      emitter[method].apply(emitter, args);\n      return source;\n    };\n  };\n\n  var createBoundEmitterMethod = function (method) {\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return emitter[method].apply(emitter, args);\n    };\n  };\n\n  return {\n    emitter: emitter,\n    createChainingEmitterMethod: createChainingEmitterMethod,\n    createBoundEmitterMethod: createBoundEmitterMethod\n  };\n}","map":{"version":3,"sources":["../../../src/util/events.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,YAAP,MAAyB,eAAzB;AAIA;;;AAGG;;AACH,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;EAA0E,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;;EAA1E,SAAA,YAAA,GAAA;;EAEI;;EAAD,OAAA,YAAA;AAAC,CAFJ,CAA0E,YAA1E,CAAA;;;AASA;;;AAGG;;AACH,OAAM,SAAU,kBAAV,GAA4B;EAChC,IAAM,OAAO,GAAG,IAAI,YAAJ,EAAhB;;EAEA,IAAM,2BAA2B,GAAG,UAClC,MADkC,EAElC,MAFkC,EAExB;IAEV,OAAO,YAAA;MAAC,IAAA,IAAA,GAAA,EAAA;;WAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAc;QAAd,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;MACL,OAAe,CAAC,MAAD,CAAf,CAAwB,KAAxB,CAA8B,OAA9B,EAAuC,IAAvC;MACD,OAAO,MAAP;IACD,CAHD;EAID,CARD;;EAUA,IAAM,wBAAwB,GAAG,UAA+B,MAA/B,EAAwC;IACvE,OAAO,YAAA;MAAC,IAAA,IAAA,GAAA,EAAA;;WAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAc;QAAd,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;MACN,OAAQ,OAAe,CAAC,MAAD,CAAf,CAAwB,KAAxB,CAA8B,OAA9B,EAAuC,IAAvC,CAAR;IACD,CAFD;EAGD,CAJD;;EAMA,OAAO;IACL,OAAO,EAAA,OADF;IAEL,2BAA2B,EAAA,2BAFtB;IAGL,wBAAwB,EAAA;EAHnB,CAAP;AAKD","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventEmitter from 'eventemitter3';\n/**\n * An extension of `EventEmitter` (provided by `eventemitter3`) with an adjusted\n * type interface that supports the unique structure of Magic SDK modules.\n */\nvar TypedEmitter = /** @class */ (function (_super) {\n    __extends(TypedEmitter, _super);\n    function TypedEmitter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return TypedEmitter;\n}(EventEmitter));\nexport { TypedEmitter };\n/**\n * Creates a `TypedEmitter` instance and returns helper functions for easily\n * mixing `TypedEmitter` methods into other objects.\n */\nexport function createTypedEmitter() {\n    var emitter = new TypedEmitter();\n    var createChainingEmitterMethod = function (method, source) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            emitter[method].apply(emitter, args);\n            return source;\n        };\n    };\n    var createBoundEmitterMethod = function (method) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return emitter[method].apply(emitter, args);\n        };\n    };\n    return {\n        emitter: emitter,\n        createChainingEmitterMethod: createChainingEmitterMethod,\n        createBoundEmitterMethod: createBoundEmitterMethod,\n    };\n}\n//# sourceMappingURL=events.js.map"]},"metadata":{},"sourceType":"module"}